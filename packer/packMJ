#! /usr/bin/perl

#
#  Compresses scripts in the MathJax project
#
#  Usage:  packMJ [--force] [project-dir]

use Cwd;
use FindBin;

if ($ARGV[0] eq '--force') {$force = true; shift}

$DST = shift || getcwd;
$SRC = "$DST/unpacked";
$bindir = $FindBin::Bin;
$PACKMJFILE = "$bindir/packMJfile";

sub packDir {
  my ($src,$dst) = @_;
  opendir(SRC,$src);
  my @files = grep(/^[^.]/,readdir(SRC));
  closedir(SRC);
  foreach my $file (@files) {
    if (-d "$src/$file") {
      next if "$src/$file" eq "$SRC/fonts";
      next if "$src/$file" eq "$SRC/docs";

      next if "$src/$file" eq "$SRC/node_modules";

      next if "$src/$file" eq "$SRC/jax/output/EditableSVG/demo";
      next if "$src/$file" eq "$SRC/jax/output/EditableSVG/lib";
      next if "$src/$file" eq "$SRC/jax/output/EditableSVG/jax_js.js";
      next if "$src/$file" eq "$SRC/jax/output/EditableSVG/webpack.config.js";
      next if "$src/$file" eq "$SRC/jax/output/EditableSVG/tests";
      next if "$src/$file" eq "$SRC/jax/output/EditableSVG/node_modules";
      next if (("$src" eq "$SRC/jax/output/EditableSVG/ts") && ("$file" ne "autoload"));

      next if "$src/$file" eq "$SRC/unpacked";
      #next if "$src/$file" eq "$SRC/extensions/a11y";
      #next if "$src/$file" eq "$SRC/extensions/TeX/mhchem3";
      if (! -e "$dst/$file") {mkdir "$dst/$file"}
      packDir("$src/$file","$dst/$file");
    } elsif ($file =~ m/\.js$/) {
      packFile($src,$dst,$file);
    }
  }
}

sub packFile {
  my ($src,$dst,$file) = @_;
  $src .= "/$file"; $dst .= "/$file";
  my ($stime,$ssize) = (stat($src))[9,7];
  my $dtime = (stat($dst))[9];
  return if $stime <= $dtime && !$force;
  if (system("$PACKMJFILE '$src' '$dst'") != 0) { die("Packer failed on file '$src'"); }
  my $dsize = (stat($dst))[7];
  print "Size: $dsize,  Original: $ssize [saved: ",$ssize-$dsize," or ",
    sprintf("%.1f",100*($ssize-$dsize)/$ssize),"%]\n";
}

packDir($SRC,$DST);

1;
